generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // id for relational database
  // id   String    @id @default(cuid())
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId

  name                String?   @default("")
  email               String?   @default("") @unique
  address             String?   @default("")
  state               String?   @default("")
  country             String?   @default("")
  dob                 String?   @default("")
  isEmailVerified     Boolean   @default(false)
  isPhoneVerified     Boolean   @default(false) 
  phone               String?
  company             String?
  pwHash              String?   @default("")

  prompt              String?
  systemPrompt        String?
  requestCount        Int?      @default(0)
  subscriptionEndDate DateTime?
  tokenExpiryDate     DateTime?
  subscriptionId      String?
  profileImage        String?

  propertyDescriptions  String[]

  aiModel             String?
  aiKey               String?
  aiTokens            String?
  aiTemperature       String?

  isDisabled          Boolean?  @default(false)
  isAdmin             Boolean   @default(false)
  contracts           Contract[]
  comments            Comment[]
}

model Contract {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  user                User      @relation(fields: [userId], references: [id])
  name                String    @default("")
  userId              String    @db.ObjectId
  contractType        String    @default("")
  contractStatus      String    @default("")
  contractStartDate   DateTime    
  contractEndDate     DateTime   
  description String    @default("")
  contractFile        String    @default("")
  contractFileDoC     DateTime?
  status              String    @default("SENT")
  sendTo              String    @default("")
  history             String[]  @default([])
  comments            Comment[]
}

model Comment {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  user                User      @relation(fields: [userId], references: [id])
  userId              String    @db.ObjectId
  contract            Contract  @relation(fields: [contractId], references: [id])
  contractId          String    @db.ObjectId
  comment             String    @default("")
  commentDoC          DateTime?
}

model Project {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  createdAt           DateTime  @default(now())
  createdBy           String
  generations         Generation[]
}

model Generation {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId

  nRooms              Int
  nBathrooms          Int
  location            String
  city                String?
  keyFeatures         String
  images              String[]

  name                String

  description         String?
  createdAt           DateTime   @default(now())
  createdBy           String?
  projectId           String?    @db.ObjectId
  project             Project?   @relation(fields: [projectId], references: [id])
  isSaved             Boolean    @default(false)

  fullResponse        String?
  errorMessage        String?
  payload             String?

  @@unique([createdBy, name, isSaved])
}
